{"remainingRequest":"/home/selim/jhipsdev/node_modules/thread-loader/dist/cjs.js??ref--4-2!/home/selim/jhipsdev/node_modules/ts-loader/index.js??ref--4-3!/home/selim/jhipsdev/node_modules/tslint-loader/index.js!/home/selim/jhipsdev/src/main/webapp/app/shared/layout/header/header.tsx","dependencies":[{"path":"/home/selim/jhipsdev/src/main/webapp/app/shared/layout/header/header.tsx","mtime":1540057954565},{"path":"/home/selim/jhipsdev/node_modules/react-hot-loader/webpack.js","mtime":1505850161000},{"path":"/home/selim/jhipsdev/node_modules/cache-loader/dist/cjs.js","mtime":1540058733161},{"path":"/home/selim/jhipsdev/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/selim/jhipsdev/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/selim/jhipsdev/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport './header.scss';\nimport React from 'react';\nimport { Translate, Storage } from 'react-jhipster';\nimport { Navbar, Nav, NavbarToggler, Collapse } from 'reactstrap';\nimport LoadingBar from 'react-redux-loading-bar';\nimport { Home, Brand } from './header-components';\nimport { AdminMenu, EntitiesMenu, AccountMenu, LocaleMenu } from './menus';\nvar Header = /** @class */ (function (_super) {\n    tslib_1.__extends(Header, _super);\n    function Header() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            menuOpen: false\n        };\n        _this.handleLocaleChange = function (event) {\n            var langKey = event.target.value;\n            Storage.session.set('locale', langKey);\n            _this.props.onLocaleChange(langKey);\n        };\n        _this.renderDevRibbon = function () {\n            return _this.props.isInProduction === false ? (React.createElement(\"div\", { className: \"ribbon dev\" },\n                React.createElement(\"a\", { href: \"\" },\n                    React.createElement(Translate, { contentKey: \"global.ribbon.\" + _this.props.ribbonEnv })))) : null;\n        };\n        _this.toggleMenu = function () {\n            _this.setState({ menuOpen: !_this.state.menuOpen });\n        };\n        return _this;\n    }\n    Header.prototype.render = function () {\n        var _a = this.props, currentLocale = _a.currentLocale, isAuthenticated = _a.isAuthenticated, isAdmin = _a.isAdmin, isSwaggerEnabled = _a.isSwaggerEnabled, isInProduction = _a.isInProduction;\n        /* jhipster-needle-add-element-to-menu - JHipster will add new menu items here */\n        return (React.createElement(\"div\", { id: \"app-header\" },\n            this.renderDevRibbon(),\n            React.createElement(LoadingBar, { className: \"loading-bar\" }),\n            React.createElement(Navbar, { dark: true, expand: \"sm\", fixed: \"top\", className: \"jh-navbar\" },\n                React.createElement(NavbarToggler, { \"aria-label\": \"Menu\", onClick: this.toggleMenu }),\n                React.createElement(Brand, null),\n                React.createElement(Collapse, { isOpen: this.state.menuOpen, navbar: true },\n                    React.createElement(Nav, { id: \"header-tabs\", className: \"ml-auto\", navbar: true },\n                        React.createElement(Home, null),\n                        isAuthenticated && React.createElement(EntitiesMenu, null),\n                        isAuthenticated && isAdmin && React.createElement(AdminMenu, { showSwagger: isSwaggerEnabled, showDatabase: !isInProduction }),\n                        React.createElement(LocaleMenu, { currentLocale: currentLocale, onClick: this.handleLocaleChange }),\n                        React.createElement(AccountMenu, { isAuthenticated: isAuthenticated }))))));\n    };\n    return Header;\n}(React.Component));\nexport default Header;\n",{"version":3,"file":"/home/selim/jhipsdev/src/main/webapp/app/shared/layout/header/header.tsx","sourceRoot":"","sources":["/home/selim/jhipsdev/node_modules/tslint-loader/index.js!/home/selim/jhipsdev/src/main/webapp/app/shared/layout/header/header.tsx"],"names":[],"mappings":";AAAA,OAAO,eAAe,CAAC;AAEvB,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,MAAM,gBAAgB,CAAC;AACpD,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,aAAa,EAAe,QAAQ,EAAE,MAAM,YAAY,CAAC;AAI/E,OAAO,UAAU,MAAM,yBAAyB,CAAC;AAEjD,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAC;AAClD,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,SAAS,CAAC;AAgB3E;IAAoC,kCAA2C;IAA/E;QAAA,qEAiDC;QAhDC,WAAK,GAAiB;YACpB,QAAQ,EAAE,KAAK;SAChB,CAAC;QAEF,wBAAkB,GAAG,UAAA,KAAK;YACxB,IAAM,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;YACnC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YACvC,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC,CAAC;QAEF,qBAAe,GAAG;YAChB,OAAA,KAAI,CAAC,KAAK,CAAC,cAAc,KAAK,KAAK,CAAC,CAAC,CAAC,CACpC,6BAAK,SAAS,EAAC,YAAY;gBACzB,2BAAG,IAAI,EAAC,EAAE;oBACR,oBAAC,SAAS,IAAC,UAAU,EAAE,mBAAiB,KAAI,CAAC,KAAK,CAAC,SAAW,GAAI,CAChE,CACA,CACP,CAAC,CAAC,CAAC,IAAI;QANR,CAMQ,CAAC;QAEX,gBAAU,GAAG;YACX,KAAI,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QACpD,CAAC,CAAC;;IA2BJ,CAAC;IAzBC,uBAAM,GAAN;QACQ,IAAA,eAA0F,EAAxF,gCAAa,EAAE,oCAAe,EAAE,oBAAO,EAAE,sCAAgB,EAAE,kCAAc,CAAgB;QAEjG,iFAAiF;QAEjF,OAAO,CACL,6BAAK,EAAE,EAAC,YAAY;YACjB,IAAI,CAAC,eAAe,EAAE;YACvB,oBAAC,UAAU,IAAC,SAAS,EAAC,aAAa,GAAG;YACtC,oBAAC,MAAM,IAAC,IAAI,QAAC,MAAM,EAAC,IAAI,EAAC,KAAK,EAAC,KAAK,EAAC,SAAS,EAAC,WAAW;gBACxD,oBAAC,aAAa,kBAAY,MAAM,EAAC,OAAO,EAAE,IAAI,CAAC,UAAU,GAAI;gBAC7D,oBAAC,KAAK,OAAG;gBACT,oBAAC,QAAQ,IAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,MAAM;oBAC3C,oBAAC,GAAG,IAAC,EAAE,EAAC,aAAa,EAAC,SAAS,EAAC,SAAS,EAAC,MAAM;wBAC9C,oBAAC,IAAI,OAAG;wBACP,eAAe,IAAI,oBAAC,YAAY,OAAG;wBACnC,eAAe,IAAI,OAAO,IAAI,oBAAC,SAAS,IAAC,WAAW,EAAE,gBAAgB,EAAE,YAAY,EAAE,CAAC,cAAc,GAAI;wBAC1G,oBAAC,UAAU,IAAC,aAAa,EAAE,aAAa,EAAE,OAAO,EAAE,IAAI,CAAC,kBAAkB,GAAI;wBAC9E,oBAAC,WAAW,IAAC,eAAe,EAAE,eAAe,GAAI,CAC7C,CACG,CACJ,CACL,CACP,CAAC;IACJ,CAAC;IACH,aAAC;AAAD,CAAC,AAjDD,CAAoC,KAAK,CAAC,SAAS,GAiDlD","sourcesContent":["import './header.scss';\n\nimport React from 'react';\nimport { Translate, Storage } from 'react-jhipster';\nimport { Navbar, Nav, NavbarToggler, NavbarBrand, Collapse } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { NavLink as Link } from 'react-router-dom';\nimport LoadingBar from 'react-redux-loading-bar';\n\nimport { Home, Brand } from './header-components';\nimport { AdminMenu, EntitiesMenu, AccountMenu, LocaleMenu } from './menus';\n\nexport interface IHeaderProps {\n  isAuthenticated: boolean;\n  isAdmin: boolean;\n  ribbonEnv: string;\n  isInProduction: boolean;\n  isSwaggerEnabled: boolean;\n  currentLocale: string;\n  onLocaleChange: Function;\n}\n\nexport interface IHeaderState {\n  menuOpen: boolean;\n}\n\nexport default class Header extends React.Component<IHeaderProps, IHeaderState> {\n  state: IHeaderState = {\n    menuOpen: false\n  };\n\n  handleLocaleChange = event => {\n    const langKey = event.target.value;\n    Storage.session.set('locale', langKey);\n    this.props.onLocaleChange(langKey);\n  };\n\n  renderDevRibbon = () =>\n    this.props.isInProduction === false ? (\n      <div className=\"ribbon dev\">\n        <a href=\"\">\n          <Translate contentKey={`global.ribbon.${this.props.ribbonEnv}`} />\n        </a>\n      </div>\n    ) : null;\n\n  toggleMenu = () => {\n    this.setState({ menuOpen: !this.state.menuOpen });\n  };\n\n  render() {\n    const { currentLocale, isAuthenticated, isAdmin, isSwaggerEnabled, isInProduction } = this.props;\n\n    /* jhipster-needle-add-element-to-menu - JHipster will add new menu items here */\n\n    return (\n      <div id=\"app-header\">\n        {this.renderDevRibbon()}\n        <LoadingBar className=\"loading-bar\" />\n        <Navbar dark expand=\"sm\" fixed=\"top\" className=\"jh-navbar\">\n          <NavbarToggler aria-label=\"Menu\" onClick={this.toggleMenu} />\n          <Brand />\n          <Collapse isOpen={this.state.menuOpen} navbar>\n            <Nav id=\"header-tabs\" className=\"ml-auto\" navbar>\n              <Home />\n              {isAuthenticated && <EntitiesMenu />}\n              {isAuthenticated && isAdmin && <AdminMenu showSwagger={isSwaggerEnabled} showDatabase={!isInProduction} />}\n              <LocaleMenu currentLocale={currentLocale} onClick={this.handleLocaleChange} />\n              <AccountMenu isAuthenticated={isAuthenticated} />\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n"]}]}