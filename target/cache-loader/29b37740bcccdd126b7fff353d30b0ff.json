{"remainingRequest":"/home/selim/jhipsdev/node_modules/thread-loader/dist/cjs.js??ref--4-2!/home/selim/jhipsdev/node_modules/ts-loader/index.js??ref--4-3!/home/selim/jhipsdev/node_modules/tslint-loader/index.js!/home/selim/jhipsdev/src/main/webapp/app/modules/home/home.tsx","dependencies":[{"path":"/home/selim/jhipsdev/src/main/webapp/app/modules/home/home.tsx","mtime":1540057954565},{"path":"/home/selim/jhipsdev/node_modules/react-hot-loader/webpack.js","mtime":1505850161000},{"path":"/home/selim/jhipsdev/node_modules/cache-loader/dist/cjs.js","mtime":1540058733161},{"path":"/home/selim/jhipsdev/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/selim/jhipsdev/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/selim/jhipsdev/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport './home.scss';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Translate } from 'react-jhipster';\nimport { connect } from 'react-redux';\nimport { Row, Col, Alert } from 'reactstrap';\nimport { getSession } from 'app/shared/reducers/authentication';\nvar Home = /** @class */ (function (_super) {\n    tslib_1.__extends(Home, _super);\n    function Home() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Home.prototype.componentDidMount = function () {\n        this.props.getSession();\n    };\n    Home.prototype.render = function () {\n        var account = this.props.account;\n        return (React.createElement(Row, null,\n            React.createElement(Col, { md: \"9\" },\n                React.createElement(\"h2\", null,\n                    React.createElement(Translate, { contentKey: \"home.title\" }, \"Welcome !\")),\n                account && account.login ? (React.createElement(\"div\", null,\n                    React.createElement(Alert, { color: \"success\" },\n                        React.createElement(Translate, { contentKey: \"home.logged.message\", interpolate: { username: account.login } },\n                            \"You are logged in as user \",\n                            account.login,\n                            \".\")))) : (React.createElement(\"div\", null,\n                    React.createElement(Alert, { color: \"warning\" },\n                        React.createElement(Translate, { contentKey: \"global.messages.info.authenticated.prefix\" }, \"If you want to \"),\n                        React.createElement(Link, { to: \"/login\", className: \"alert-link\" },\n                            React.createElement(Translate, { contentKey: \"global.messages.info.authenticated.link\" }, \" sign in\")),\n                        React.createElement(Translate, { contentKey: \"global.messages.info.authenticated.suffix\" },\n                            React.createElement(\"br\", null),\n                            \"User (login=\\\"user\\\" and password=\\\"user\\\").\")),\n                    React.createElement(Alert, { color: \"warning\" },\n                        React.createElement(Translate, { contentKey: \"global.messages.info.register.noaccount\" }, \"You do not have an account yet?\"),\n                        \"\\u00A0\",\n                        React.createElement(Link, { to: \"/register\", className: \"alert-link\" },\n                            React.createElement(Translate, { contentKey: \"global.messages.info.register.link\" }, \"Register a new account\")))))),\n            React.createElement(Col, { md: \"3\", className: \"pad\" },\n                React.createElement(\"span\", { className: \"hipster rounded\" }))));\n    };\n    return Home;\n}(React.Component));\nexport { Home };\nvar mapStateToProps = function (storeState) { return ({\n    account: storeState.authentication.account,\n    isAuthenticated: storeState.authentication.isAuthenticated\n}); };\nvar mapDispatchToProps = { getSession: getSession };\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n",{"version":3,"file":"/home/selim/jhipsdev/src/main/webapp/app/modules/home/home.tsx","sourceRoot":"","sources":["/home/selim/jhipsdev/node_modules/tslint-loader/index.js!/home/selim/jhipsdev/src/main/webapp/app/modules/home/home.tsx"],"names":[],"mappings":";AAAA,OAAO,aAAa,CAAC;AAErB,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAC;AACxC,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AACtC,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,YAAY,CAAC;AAG7C,OAAO,EAAE,UAAU,EAAE,MAAM,oCAAoC,CAAC;AAIhE;IAA0B,gCAA0B;IAApD;;IAoDA,CAAC;IAnDC,gCAAiB,GAAjB;QACE,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;IAC1B,CAAC;IAED,qBAAM,GAAN;QACU,IAAA,4BAAO,CAAgB;QAC/B,OAAO,CACL,oBAAC,GAAG;YACF,oBAAC,GAAG,IAAC,EAAE,EAAC,GAAG;gBACT;oBACE,oBAAC,SAAS,IAAC,UAAU,EAAC,YAAY,gBAAsB,CACrD;gBACJ,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAC1B;oBACE,oBAAC,KAAK,IAAC,KAAK,EAAC,SAAS;wBACpB,oBAAC,SAAS,IAAC,UAAU,EAAC,qBAAqB,EAAC,WAAW,EAAE,EAAE,QAAQ,EAAE,OAAO,CAAC,KAAK,EAAE;;4BACvD,OAAO,CAAC,KAAK;gCAC9B,CACN,CACJ,CACP,CAAC,CAAC,CAAC,CACF;oBACE,oBAAC,KAAK,IAAC,KAAK,EAAC,SAAS;wBACpB,oBAAC,SAAS,IAAC,UAAU,EAAC,2CAA2C,sBAA4B;wBAC7F,oBAAC,IAAI,IAAC,EAAE,EAAC,QAAQ,EAAC,SAAS,EAAC,YAAY;4BACtC,oBAAC,SAAS,IAAC,UAAU,EAAC,yCAAyC,eAAqB,CAC/E;wBACP,oBAAC,SAAS,IAAC,UAAU,EAAC,2CAA2C;4BAG/D,+BAAM;2EAEI,CACN;oBAER,oBAAC,KAAK,IAAC,KAAK,EAAC,SAAS;wBACpB,oBAAC,SAAS,IAAC,UAAU,EAAC,yCAAyC,sCAA4C;;wBAE3G,oBAAC,IAAI,IAAC,EAAE,EAAC,WAAW,EAAC,SAAS,EAAC,YAAY;4BACzC,oBAAC,SAAS,IAAC,UAAU,EAAC,oCAAoC,6BAAmC,CACxF,CACD,CACJ,CACP,CACG;YACN,oBAAC,GAAG,IAAC,EAAE,EAAC,GAAG,EAAC,SAAS,EAAC,KAAK;gBACzB,8BAAM,SAAS,EAAC,iBAAiB,GAAG,CAChC,CACF,CACP,CAAC;IACJ,CAAC;IACH,WAAC;AAAD,CAAC,AApDD,CAA0B,KAAK,CAAC,SAAS,GAoDxC;;AAED,IAAM,eAAe,GAAG,UAAA,UAAU,IAAI,OAAA,CAAC;IACrC,OAAO,EAAE,UAAU,CAAC,cAAc,CAAC,OAAO;IAC1C,eAAe,EAAE,UAAU,CAAC,cAAc,CAAC,eAAe;CAC3D,CAAC,EAHoC,CAGpC,CAAC;AAEH,IAAM,kBAAkB,GAAG,EAAE,UAAU,YAAA,EAAE,CAAC;AAK1C,eAAe,OAAO,CACpB,eAAe,EACf,kBAAkB,CACnB,CAAC,IAAI,CAAC,CAAC","sourcesContent":["import './home.scss';\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Translate } from 'react-jhipster';\nimport { connect } from 'react-redux';\nimport { Row, Col, Alert } from 'reactstrap';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { getSession } from 'app/shared/reducers/authentication';\n\nexport interface IHomeProp extends StateProps, DispatchProps {}\n\nexport class Home extends React.Component<IHomeProp> {\n  componentDidMount() {\n    this.props.getSession();\n  }\n\n  render() {\n    const { account } = this.props;\n    return (\n      <Row>\n        <Col md=\"9\">\n          <h2>\n            <Translate contentKey=\"home.title\">Welcome !</Translate>\n          </h2>\n          {account && account.login ? (\n            <div>\n              <Alert color=\"success\">\n                <Translate contentKey=\"home.logged.message\" interpolate={{ username: account.login }}>\n                  You are logged in as user {account.login}.\n                </Translate>\n              </Alert>\n            </div>\n          ) : (\n            <div>\n              <Alert color=\"warning\">\n                <Translate contentKey=\"global.messages.info.authenticated.prefix\">If you want to </Translate>\n                <Link to=\"/login\" className=\"alert-link\">\n                  <Translate contentKey=\"global.messages.info.authenticated.link\"> sign in</Translate>\n                </Link>\n                <Translate contentKey=\"global.messages.info.authenticated.suffix\">\n                  {/*, you can try the default accounts:*/}\n                  {/*<br />- Administrator (login=&quot;admin&quot; and password=&quot;admin&quot;)*/}\n                  <br />\n                  User (login=&quot;user&quot; and password=&quot;user&quot;).\n                </Translate>\n              </Alert>\n\n              <Alert color=\"warning\">\n                <Translate contentKey=\"global.messages.info.register.noaccount\">You do not have an account yet?</Translate>\n                &nbsp;\n                <Link to=\"/register\" className=\"alert-link\">\n                  <Translate contentKey=\"global.messages.info.register.link\">Register a new account</Translate>\n                </Link>\n              </Alert>\n            </div>\n          )}\n        </Col>\n        <Col md=\"3\" className=\"pad\">\n          <span className=\"hipster rounded\" />\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = storeState => ({\n  account: storeState.authentication.account,\n  isAuthenticated: storeState.authentication.isAuthenticated\n});\n\nconst mapDispatchToProps = { getSession };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home);\n"]}]}