{"remainingRequest":"/home/selim/jhipsdev/node_modules/thread-loader/dist/cjs.js??ref--4-2!/home/selim/jhipsdev/node_modules/ts-loader/index.js??ref--4-3!/home/selim/jhipsdev/node_modules/tslint-loader/index.js!/home/selim/jhipsdev/src/main/webapp/app/shared/layout/header/menus/admin.tsx","dependencies":[{"path":"/home/selim/jhipsdev/src/main/webapp/app/shared/layout/header/menus/admin.tsx","mtime":1540057954565},{"path":"/home/selim/jhipsdev/node_modules/react-hot-loader/webpack.js","mtime":1505850161000},{"path":"/home/selim/jhipsdev/node_modules/cache-loader/dist/cjs.js","mtime":1540058733161},{"path":"/home/selim/jhipsdev/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/selim/jhipsdev/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/selim/jhipsdev/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import React from 'react';\nimport { DropdownItem } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { NavLink as Link } from 'react-router-dom';\nimport { NavDropdown } from '../header-components';\nimport { Translate, translate } from 'react-jhipster';\nvar adminMenuItems = (React.createElement(React.Fragment, null,\n    React.createElement(DropdownItem, { tag: Link, to: \"/admin/user-management\" },\n        React.createElement(FontAwesomeIcon, { icon: \"user\" }),\n        \" \",\n        React.createElement(Translate, { contentKey: \"global.menu.admin.userManagement\" }, \"User management\")),\n    React.createElement(DropdownItem, { tag: Link, to: \"/admin/metrics\" },\n        React.createElement(FontAwesomeIcon, { icon: \"tachometer-alt\" }),\n        \" \",\n        React.createElement(Translate, { contentKey: \"global.menu.admin.metrics\" }, \"Metrics\")),\n    React.createElement(DropdownItem, { tag: Link, to: \"/admin/health\" },\n        React.createElement(FontAwesomeIcon, { icon: \"heart\" }),\n        \" \",\n        React.createElement(Translate, { contentKey: \"global.menu.admin.health\" }, \"Health\")),\n    React.createElement(DropdownItem, { tag: Link, to: \"/admin/configuration\" },\n        React.createElement(FontAwesomeIcon, { icon: \"list\" }),\n        \" \",\n        React.createElement(Translate, { contentKey: \"global.menu.admin.configuration\" }, \"Configuration\")),\n    React.createElement(DropdownItem, { tag: Link, to: \"/admin/audits\" },\n        React.createElement(FontAwesomeIcon, { icon: \"bell\" }),\n        \" \",\n        React.createElement(Translate, { contentKey: \"global.menu.admin.audits\" }, \"Audits\")),\n    React.createElement(DropdownItem, { tag: Link, to: \"/admin/logs\" },\n        React.createElement(FontAwesomeIcon, { icon: \"tasks\" }),\n        \" \",\n        React.createElement(Translate, { contentKey: \"global.menu.admin.logs\" }, \"Logs\"))));\nvar swaggerItem = (React.createElement(DropdownItem, { tag: Link, to: \"/admin/docs\" },\n    React.createElement(FontAwesomeIcon, { icon: \"book\" }),\n    \" \",\n    React.createElement(Translate, { contentKey: \"global.menu.admin.apidocs\" }, \"API\")));\nvar databaseItem = (React.createElement(DropdownItem, { tag: \"a\", href: \"./h2-console\", target: \"_tab\" },\n    React.createElement(FontAwesomeIcon, { icon: \"hdd\" }),\n    \" \",\n    React.createElement(Translate, { contentKey: \"global.menu.admin.database\" }, \"Database\")));\nexport var AdminMenu = function (_a) {\n    var showSwagger = _a.showSwagger, showDatabase = _a.showDatabase;\n    return (React.createElement(NavDropdown, { icon: \"user-plus\", name: translate('global.menu.admin.main'), style: { width: '140%' }, id: \"admin-menu\" },\n        adminMenuItems,\n        showSwagger && swaggerItem,\n        showDatabase && databaseItem));\n};\nexport default AdminMenu;\n",{"version":3,"file":"/home/selim/jhipsdev/src/main/webapp/app/shared/layout/header/menus/admin.tsx","sourceRoot":"","sources":["/home/selim/jhipsdev/node_modules/tslint-loader/index.js!/home/selim/jhipsdev/src/main/webapp/app/shared/layout/header/menus/admin.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,YAAY,EAAE,MAAM,YAAY,CAAC;AAC1C,OAAO,EAAE,eAAe,EAAE,MAAM,gCAAgC,CAAC;AACjE,OAAO,EAAE,OAAO,IAAI,IAAI,EAAE,MAAM,kBAAkB,CAAC;AACnD,OAAO,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAC;AACnD,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAEtD,IAAM,cAAc,GAAG,CACrB;IACE,oBAAC,YAAY,IAAC,GAAG,EAAE,IAAI,EAAE,EAAE,EAAC,wBAAwB;QAClD,oBAAC,eAAe,IAAC,IAAI,EAAC,MAAM,GAAG;;QAAC,oBAAC,SAAS,IAAC,UAAU,EAAC,kCAAkC,sBAA4B,CACvG;IACf,oBAAC,YAAY,IAAC,GAAG,EAAE,IAAI,EAAE,EAAE,EAAC,gBAAgB;QAC1C,oBAAC,eAAe,IAAC,IAAI,EAAC,gBAAgB,GAAG;;QAAC,oBAAC,SAAS,IAAC,UAAU,EAAC,2BAA2B,cAAoB,CAClG;IACf,oBAAC,YAAY,IAAC,GAAG,EAAE,IAAI,EAAE,EAAE,EAAC,eAAe;QACzC,oBAAC,eAAe,IAAC,IAAI,EAAC,OAAO,GAAG;;QAAC,oBAAC,SAAS,IAAC,UAAU,EAAC,0BAA0B,aAAmB,CACvF;IACf,oBAAC,YAAY,IAAC,GAAG,EAAE,IAAI,EAAE,EAAE,EAAC,sBAAsB;QAChD,oBAAC,eAAe,IAAC,IAAI,EAAC,MAAM,GAAG;;QAAC,oBAAC,SAAS,IAAC,UAAU,EAAC,iCAAiC,oBAA0B,CACpG;IACf,oBAAC,YAAY,IAAC,GAAG,EAAE,IAAI,EAAE,EAAE,EAAC,eAAe;QACzC,oBAAC,eAAe,IAAC,IAAI,EAAC,MAAM,GAAG;;QAAC,oBAAC,SAAS,IAAC,UAAU,EAAC,0BAA0B,aAAmB,CACtF;IAEf,oBAAC,YAAY,IAAC,GAAG,EAAE,IAAI,EAAE,EAAE,EAAC,aAAa;QACvC,oBAAC,eAAe,IAAC,IAAI,EAAC,OAAO,GAAG;;QAAC,oBAAC,SAAS,IAAC,UAAU,EAAC,wBAAwB,WAAiB,CACnF,CACd,CACJ,CAAC;AAEF,IAAM,WAAW,GAAG,CAClB,oBAAC,YAAY,IAAC,GAAG,EAAE,IAAI,EAAE,EAAE,EAAC,aAAa;IACvC,oBAAC,eAAe,IAAC,IAAI,EAAC,MAAM,GAAG;;IAAC,oBAAC,SAAS,IAAC,UAAU,EAAC,2BAA2B,UAAgB,CACpF,CAChB,CAAC;AAEF,IAAM,YAAY,GAAG,CACnB,oBAAC,YAAY,IAAC,GAAG,EAAC,GAAG,EAAC,IAAI,EAAC,cAAc,EAAC,MAAM,EAAC,MAAM;IACrD,oBAAC,eAAe,IAAC,IAAI,EAAC,KAAK,GAAG;;IAAC,oBAAC,SAAS,IAAC,UAAU,EAAC,4BAA4B,eAAqB,CACzF,CAChB,CAAC;AAEF,MAAM,CAAC,IAAM,SAAS,GAAG,UAAC,EAA6B;QAA3B,4BAAW,EAAE,8BAAY;IAAO,OAAA,CAC1D,oBAAC,WAAW,IAAC,IAAI,EAAC,WAAW,EAAC,IAAI,EAAE,SAAS,CAAC,wBAAwB,CAAC,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,EAAC,YAAY;QAC/G,cAAc;QACd,WAAW,IAAI,WAAW;QAE1B,YAAY,IAAI,YAAY,CACjB,CACf;AAP2D,CAO3D,CAAC;AAEF,eAAe,SAAS,CAAC","sourcesContent":["import React from 'react';\nimport { DropdownItem } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { NavLink as Link } from 'react-router-dom';\nimport { NavDropdown } from '../header-components';\nimport { Translate, translate } from 'react-jhipster';\n\nconst adminMenuItems = (\n  <>\n    <DropdownItem tag={Link} to=\"/admin/user-management\">\n      <FontAwesomeIcon icon=\"user\" /> <Translate contentKey=\"global.menu.admin.userManagement\">User management</Translate>\n    </DropdownItem>\n    <DropdownItem tag={Link} to=\"/admin/metrics\">\n      <FontAwesomeIcon icon=\"tachometer-alt\" /> <Translate contentKey=\"global.menu.admin.metrics\">Metrics</Translate>\n    </DropdownItem>\n    <DropdownItem tag={Link} to=\"/admin/health\">\n      <FontAwesomeIcon icon=\"heart\" /> <Translate contentKey=\"global.menu.admin.health\">Health</Translate>\n    </DropdownItem>\n    <DropdownItem tag={Link} to=\"/admin/configuration\">\n      <FontAwesomeIcon icon=\"list\" /> <Translate contentKey=\"global.menu.admin.configuration\">Configuration</Translate>\n    </DropdownItem>\n    <DropdownItem tag={Link} to=\"/admin/audits\">\n      <FontAwesomeIcon icon=\"bell\" /> <Translate contentKey=\"global.menu.admin.audits\">Audits</Translate>\n    </DropdownItem>\n    {/* jhipster-needle-add-element-to-admin-menu - JHipster will add entities to the admin menu here */}\n    <DropdownItem tag={Link} to=\"/admin/logs\">\n      <FontAwesomeIcon icon=\"tasks\" /> <Translate contentKey=\"global.menu.admin.logs\">Logs</Translate>\n    </DropdownItem>\n  </>\n);\n\nconst swaggerItem = (\n  <DropdownItem tag={Link} to=\"/admin/docs\">\n    <FontAwesomeIcon icon=\"book\" /> <Translate contentKey=\"global.menu.admin.apidocs\">API</Translate>\n  </DropdownItem>\n);\n\nconst databaseItem = (\n  <DropdownItem tag=\"a\" href=\"./h2-console\" target=\"_tab\">\n    <FontAwesomeIcon icon=\"hdd\" /> <Translate contentKey=\"global.menu.admin.database\">Database</Translate>\n  </DropdownItem>\n);\n\nexport const AdminMenu = ({ showSwagger, showDatabase }) => (\n  <NavDropdown icon=\"user-plus\" name={translate('global.menu.admin.main')} style={{ width: '140%' }} id=\"admin-menu\">\n    {adminMenuItems}\n    {showSwagger && swaggerItem}\n\n    {showDatabase && databaseItem}\n  </NavDropdown>\n);\n\nexport default AdminMenu;\n"]}]}