{"remainingRequest":"/home/selim/jhipsdev/node_modules/thread-loader/dist/cjs.js??ref--4-2!/home/selim/jhipsdev/node_modules/ts-loader/index.js??ref--4-3!/home/selim/jhipsdev/node_modules/tslint-loader/index.js!/home/selim/jhipsdev/src/main/webapp/app/entities/task/task-delete-dialog.tsx","dependencies":[{"path":"/home/selim/jhipsdev/src/main/webapp/app/entities/task/task-delete-dialog.tsx","mtime":1540057954565},{"path":"/home/selim/jhipsdev/node_modules/react-hot-loader/webpack.js","mtime":1505850161000},{"path":"/home/selim/jhipsdev/node_modules/cache-loader/dist/cjs.js","mtime":1540058733161},{"path":"/home/selim/jhipsdev/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/selim/jhipsdev/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/selim/jhipsdev/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { Translate } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { getEntity, deleteEntity } from './task.reducer';\nvar TaskDeleteDialog = /** @class */ (function (_super) {\n    tslib_1.__extends(TaskDeleteDialog, _super);\n    function TaskDeleteDialog() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.confirmDelete = function (event) {\n            _this.props.deleteEntity(_this.props.taskEntity.id);\n            _this.handleClose(event);\n        };\n        _this.handleClose = function (event) {\n            event.stopPropagation();\n            _this.props.history.goBack();\n        };\n        return _this;\n    }\n    TaskDeleteDialog.prototype.componentDidMount = function () {\n        this.props.getEntity(this.props.match.params.id);\n    };\n    TaskDeleteDialog.prototype.render = function () {\n        var taskEntity = this.props.taskEntity;\n        return (React.createElement(Modal, { isOpen: true, toggle: this.handleClose },\n            React.createElement(ModalHeader, { toggle: this.handleClose },\n                React.createElement(Translate, { contentKey: \"entity.delete.title\" }, \"Confirm delete operation\")),\n            React.createElement(ModalBody, { id: \"todoListApp.task.delete.question\" },\n                React.createElement(Translate, { contentKey: \"todoListApp.task.delete.question\", interpolate: { id: taskEntity.id } }, \"Are you sure you want to delete this Task?\")),\n            React.createElement(ModalFooter, null,\n                React.createElement(Button, { color: \"secondary\", onClick: this.handleClose },\n                    React.createElement(FontAwesomeIcon, { icon: \"ban\" }),\n                    \"\\u00A0\",\n                    React.createElement(Translate, { contentKey: \"entity.action.cancel\" }, \"Cancel\")),\n                React.createElement(Button, { id: \"jhi-confirm-delete-task\", color: \"danger\", onClick: this.confirmDelete },\n                    React.createElement(FontAwesomeIcon, { icon: \"trash\" }),\n                    \"\\u00A0\",\n                    React.createElement(Translate, { contentKey: \"entity.action.delete\" }, \"Delete\")))));\n    };\n    return TaskDeleteDialog;\n}(React.Component));\nexport { TaskDeleteDialog };\nvar mapStateToProps = function (_a) {\n    var task = _a.task;\n    return ({\n        taskEntity: task.entity\n    });\n};\nvar mapDispatchToProps = { getEntity: getEntity, deleteEntity: deleteEntity };\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskDeleteDialog);\n",{"version":3,"file":"/home/selim/jhipsdev/src/main/webapp/app/entities/task/task-delete-dialog.tsx","sourceRoot":"","sources":["/home/selim/jhipsdev/node_modules/tslint-loader/index.js!/home/selim/jhipsdev/src/main/webapp/app/entities/task/task-delete-dialog.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAEtC,OAAO,EAAE,KAAK,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,YAAY,CAAC;AAChF,OAAO,EAAE,SAAS,EAAqC,MAAM,gBAAgB,CAAC;AAC9E,OAAO,EAAE,eAAe,EAAE,MAAM,gCAAgC,CAAC;AAIjE,OAAO,EAAE,SAAS,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAIzD;IAAsC,4CAAuC;IAA7E;QAAA,qEA0CC;QArCC,mBAAa,GAAG,UAAA,KAAK;YACnB,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;YAClD,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC,CAAC;QAEF,iBAAW,GAAG,UAAA,KAAK;YACjB,KAAK,CAAC,eAAe,EAAE,CAAC;YACxB,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;QAC9B,CAAC,CAAC;;IA6BJ,CAAC;IAzCC,4CAAiB,GAAjB;QACE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACnD,CAAC;IAYD,iCAAM,GAAN;QACU,IAAA,kCAAU,CAAgB;QAClC,OAAO,CACL,oBAAC,KAAK,IAAC,MAAM,QAAC,MAAM,EAAE,IAAI,CAAC,WAAW;YACpC,oBAAC,WAAW,IAAC,MAAM,EAAE,IAAI,CAAC,WAAW;gBACnC,oBAAC,SAAS,IAAC,UAAU,EAAC,qBAAqB,+BAAqC,CACpE;YACd,oBAAC,SAAS,IAAC,EAAE,EAAC,kCAAkC;gBAC9C,oBAAC,SAAS,IAAC,UAAU,EAAC,kCAAkC,EAAC,WAAW,EAAE,EAAE,EAAE,EAAE,UAAU,CAAC,EAAE,EAAE,iDAE/E,CACF;YACZ,oBAAC,WAAW;gBACV,oBAAC,MAAM,IAAC,KAAK,EAAC,WAAW,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW;oBACjD,oBAAC,eAAe,IAAC,IAAI,EAAC,KAAK,GAAG;;oBAE9B,oBAAC,SAAS,IAAC,UAAU,EAAC,sBAAsB,aAAmB,CACxD;gBACT,oBAAC,MAAM,IAAC,EAAE,EAAC,yBAAyB,EAAC,KAAK,EAAC,QAAQ,EAAC,OAAO,EAAE,IAAI,CAAC,aAAa;oBAC7E,oBAAC,eAAe,IAAC,IAAI,EAAC,OAAO,GAAG;;oBAEhC,oBAAC,SAAS,IAAC,UAAU,EAAC,sBAAsB,aAAmB,CACxD,CACG,CACR,CACT,CAAC;IACJ,CAAC;IACH,uBAAC;AAAD,CAAC,AA1CD,CAAsC,KAAK,CAAC,SAAS,GA0CpD;;AAED,IAAM,eAAe,GAAG,UAAC,EAAoB;QAAlB,cAAI;IAAmB,OAAA,CAAC;QACjD,UAAU,EAAE,IAAI,CAAC,MAAM;KACxB,CAAC;AAFgD,CAEhD,CAAC;AAEH,IAAM,kBAAkB,GAAG,EAAE,SAAS,WAAA,EAAE,YAAY,cAAA,EAAE,CAAC;AAKvD,eAAe,OAAO,CACpB,eAAe,EACf,kBAAkB,CACnB,CAAC,gBAAgB,CAAC,CAAC","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { ITask } from 'app/shared/model/task.model';\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntity, deleteEntity } from './task.reducer';\n\nexport interface ITaskDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport class TaskDeleteDialog extends React.Component<ITaskDeleteDialogProps> {\n  componentDidMount() {\n    this.props.getEntity(this.props.match.params.id);\n  }\n\n  confirmDelete = event => {\n    this.props.deleteEntity(this.props.taskEntity.id);\n    this.handleClose(event);\n  };\n\n  handleClose = event => {\n    event.stopPropagation();\n    this.props.history.goBack();\n  };\n\n  render() {\n    const { taskEntity } = this.props;\n    return (\n      <Modal isOpen toggle={this.handleClose}>\n        <ModalHeader toggle={this.handleClose}>\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\n        </ModalHeader>\n        <ModalBody id=\"todoListApp.task.delete.question\">\n          <Translate contentKey=\"todoListApp.task.delete.question\" interpolate={{ id: taskEntity.id }}>\n            Are you sure you want to delete this Task?\n          </Translate>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.handleClose}>\n            <FontAwesomeIcon icon=\"ban\" />\n            &nbsp;\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\n          </Button>\n          <Button id=\"jhi-confirm-delete-task\" color=\"danger\" onClick={this.confirmDelete}>\n            <FontAwesomeIcon icon=\"trash\" />\n            &nbsp;\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\n          </Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = ({ task }: IRootState) => ({\n  taskEntity: task.entity\n});\n\nconst mapDispatchToProps = { getEntity, deleteEntity };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TaskDeleteDialog);\n"]}]}