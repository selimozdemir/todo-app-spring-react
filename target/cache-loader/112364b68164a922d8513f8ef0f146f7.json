{"remainingRequest":"/home/selim/jhipsdev/node_modules/thread-loader/dist/cjs.js??ref--4-2!/home/selim/jhipsdev/node_modules/ts-loader/index.js??ref--4-3!/home/selim/jhipsdev/node_modules/tslint-loader/index.js!/home/selim/jhipsdev/src/main/webapp/app/entities/task/task-detail.tsx","dependencies":[{"path":"/home/selim/jhipsdev/src/main/webapp/app/entities/task/task-detail.tsx","mtime":1540057954565},{"path":"/home/selim/jhipsdev/node_modules/react-hot-loader/webpack.js","mtime":1505850161000},{"path":"/home/selim/jhipsdev/node_modules/cache-loader/dist/cjs.js","mtime":1540058733161},{"path":"/home/selim/jhipsdev/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/selim/jhipsdev/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/selim/jhipsdev/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button, Row, Col } from 'reactstrap';\n// tslint:disable-next-line:no-unused-variable\nimport { Translate, TextFormat } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { getEntity } from './task.reducer';\n// tslint:disable-next-line:no-unused-variable\nimport { APP_DATE_FORMAT } from 'app/config/constants';\nvar TaskDetail = /** @class */ (function (_super) {\n    tslib_1.__extends(TaskDetail, _super);\n    function TaskDetail() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TaskDetail.prototype.componentDidMount = function () {\n        this.props.getEntity(this.props.match.params.id);\n    };\n    TaskDetail.prototype.render = function () {\n        var taskEntity = this.props.taskEntity;\n        return (React.createElement(Row, null,\n            React.createElement(Col, { md: \"8\" },\n                React.createElement(\"h2\", null,\n                    React.createElement(Translate, { contentKey: \"todoListApp.task.detail.title\" }, \"Task\"),\n                    \" [\",\n                    React.createElement(\"b\", null, taskEntity.id),\n                    \"]\"),\n                React.createElement(\"dl\", { className: \"jh-entity-details\" },\n                    React.createElement(\"dt\", null,\n                        React.createElement(\"span\", { id: \"name\" },\n                            React.createElement(Translate, { contentKey: \"todoListApp.task.name\" }, \"Name\"))),\n                    React.createElement(\"dd\", null, taskEntity.name),\n                    React.createElement(\"dt\", null,\n                        React.createElement(\"span\", { id: \"description\" },\n                            React.createElement(Translate, { contentKey: \"todoListApp.task.description\" }, \"Description\"))),\n                    React.createElement(\"dd\", null, taskEntity.description),\n                    React.createElement(\"dt\", null,\n                        React.createElement(\"span\", { id: \"createDate\" },\n                            React.createElement(Translate, { contentKey: \"todoListApp.task.createDate\" }, \"Create Date\"))),\n                    React.createElement(\"dd\", null,\n                        React.createElement(TextFormat, { value: taskEntity.createDate, type: \"date\", format: APP_DATE_FORMAT })),\n                    React.createElement(\"dt\", null,\n                        React.createElement(\"span\", { id: \"deadline\" },\n                            React.createElement(Translate, { contentKey: \"todoListApp.task.deadline\" }, \"Deadline\"))),\n                    React.createElement(\"dd\", null,\n                        React.createElement(TextFormat, { value: taskEntity.deadline, type: \"date\", format: APP_DATE_FORMAT })),\n                    React.createElement(\"dt\", null,\n                        React.createElement(\"span\", { id: \"status\" },\n                            React.createElement(Translate, { contentKey: \"todoListApp.task.status\" }, \"Status\"))),\n                    React.createElement(\"dd\", null, taskEntity.status),\n                    React.createElement(\"dt\", null,\n                        React.createElement(Translate, { contentKey: \"todoListApp.task.user\" }, \"User\")),\n                    React.createElement(\"dd\", null, taskEntity.user ? taskEntity.user.login : ''),\n                    React.createElement(\"dt\", null,\n                        React.createElement(Translate, { contentKey: \"todoListApp.task.task\" }, \"Task\")),\n                    React.createElement(\"dd\", null, taskEntity.task ? taskEntity.task.name : '')),\n                React.createElement(Button, { tag: Link, to: \"/apps/task\", replace: true, color: \"info\" },\n                    React.createElement(FontAwesomeIcon, { icon: \"arrow-left\" }),\n                    ' ',\n                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\n                        React.createElement(Translate, { contentKey: \"entity.action.back\" }, \"Back\"))),\n                \"\\u00A0\",\n                React.createElement(Button, { tag: Link, to: \"/apps/task/\" + taskEntity.id + \"/edit\", replace: true, color: \"primary\" },\n                    React.createElement(FontAwesomeIcon, { icon: \"pencil-alt\" }),\n                    ' ',\n                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\n                        React.createElement(Translate, { contentKey: \"entity.action.edit\" }, \"Edit\"))))));\n    };\n    return TaskDetail;\n}(React.Component));\nexport { TaskDetail };\nvar mapStateToProps = function (_a) {\n    var task = _a.task;\n    return ({\n        taskEntity: task.entity\n    });\n};\nvar mapDispatchToProps = { getEntity: getEntity };\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskDetail);\n",{"version":3,"file":"/home/selim/jhipsdev/src/main/webapp/app/entities/task/task-detail.tsx","sourceRoot":"","sources":["/home/selim/jhipsdev/node_modules/tslint-loader/index.js!/home/selim/jhipsdev/src/main/webapp/app/entities/task/task-detail.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Row, Col } from 'reactstrap';\n// tslint:disable-next-line:no-unused-variable\nimport { Translate, ICrudGetAction, TextFormat } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntity } from './task.reducer';\nimport { ITask } from 'app/shared/model/task.model';\n// tslint:disable-next-line:no-unused-variable\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\n\nexport interface ITaskDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\n\nexport class TaskDetail extends React.Component<ITaskDetailProps> {\n  componentDidMount() {\n    this.props.getEntity(this.props.match.params.id);\n  }\n\n  render() {\n    const { taskEntity } = this.props;\n    return (\n      <Row>\n        <Col md=\"8\">\n          <h2>\n            <Translate contentKey=\"todoListApp.task.detail.title\">Task</Translate> [<b>{taskEntity.id}</b>]\n          </h2>\n          <dl className=\"jh-entity-details\">\n            <dt>\n              <span id=\"name\">\n                <Translate contentKey=\"todoListApp.task.name\">Name</Translate>\n              </span>\n            </dt>\n            <dd>{taskEntity.name}</dd>\n            <dt>\n              <span id=\"description\">\n                <Translate contentKey=\"todoListApp.task.description\">Description</Translate>\n              </span>\n            </dt>\n            <dd>{taskEntity.description}</dd>\n            <dt>\n              <span id=\"createDate\">\n                <Translate contentKey=\"todoListApp.task.createDate\">Create Date</Translate>\n              </span>\n            </dt>\n            <dd>\n              <TextFormat value={taskEntity.createDate} type=\"date\" format={APP_DATE_FORMAT} />\n            </dd>\n            <dt>\n              <span id=\"deadline\">\n                <Translate contentKey=\"todoListApp.task.deadline\">Deadline</Translate>\n              </span>\n            </dt>\n            <dd>\n              <TextFormat value={taskEntity.deadline} type=\"date\" format={APP_DATE_FORMAT} />\n            </dd>\n            <dt>\n              <span id=\"status\">\n                <Translate contentKey=\"todoListApp.task.status\">Status</Translate>\n              </span>\n            </dt>\n            <dd>{taskEntity.status}</dd>\n            <dt>\n              <Translate contentKey=\"todoListApp.task.user\">User</Translate>\n            </dt>\n            <dd>{taskEntity.user ? taskEntity.user.login : ''}</dd>\n            <dt>\n              <Translate contentKey=\"todoListApp.task.task\">Task</Translate>\n            </dt>\n            <dd>{taskEntity.task ? taskEntity.task.name : ''}</dd>\n          </dl>\n          <Button tag={Link} to=\"/apps/task\" replace color=\"info\">\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\n            <span className=\"d-none d-md-inline\">\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\n            </span>\n          </Button>\n          &nbsp;\n          <Button tag={Link} to={`/apps/task/${taskEntity.id}/edit`} replace color=\"primary\">\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\n            <span className=\"d-none d-md-inline\">\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\n            </span>\n          </Button>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = ({ task }: IRootState) => ({\n  taskEntity: task.entity\n});\n\nconst mapDispatchToProps = { getEntity };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TaskDetail);\n"]}]}